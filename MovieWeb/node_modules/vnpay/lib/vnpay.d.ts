import { VNPayConfig, BuildPaymentUrl, ReturnQueryFromVNPay, VerifyReturnUrl, VerifyIpnCall } from './types';
import { QueryDr, QueryDrResponseFromVNPay } from './types/query-dr.type';
import { Refund } from './types/refund.type';
import { Bank } from './types/bank.type';
/**
 * Lớp hỗ trợ thanh toán qua VNPay
 * @en VNPay class to support VNPay payment
 * @see https://sandbox.vnpayment.vn/apis/docs/huong-dan-tich-hop/
 *
 * @example
 * import { VNPay } from 'vnpay';
 *
 * const vnpay = new VNPay({
 *     api_Host: 'https://sandbox.vnpayment.vn',
 *     tmnCode: 'TMNCODE',
 *     secureSecret: 'SERCRET',
 *     testMode: true, // optional
 *     hashAlgorithm: 'SHA512', // optional
 *     paymentEndpoint: 'paymentv2/vpcpay.html', // optional
 * });
 *
 * const tnx = '12345678'; // Generate your own transaction code
 * const urlString = vnpay.buildPaymentUrl({
 *     vnp_Amount: 100000,
 *      vnp_IpAddr: '192.168.0.1',
 *      vnp_ReturnUrl: 'http://localhost:8888/order/vnpay_return',
 *      vnp_TxnRef: tnx,
 *      vnp_OrderInfo: `Thanh toan cho ma GD: ${tnx}`,
 * }),
 *
 */
export declare class VNPay {
    private globalDefaultConfig;
    private HASH_ALGORITHM;
    private BUFFER_ENCODE;
    constructor({ vnpayHost, vnp_Version, vnp_CurrCode, vnp_Locale, testMode, paymentEndpoint, ...config }: VNPayConfig);
    /**
     * Lấy cấu hình mặc định của VNPay
     * @en Get default config of VNPay
     */
    get defaultConfig(): {
        vnp_TmnCode: string;
        vnp_Version: string | undefined;
        vnp_CurrCode: "VND";
        vnp_Locale: "vn" | "en";
        vnp_Command: string;
        vnp_OrderType: string;
    };
    getBankList(): Promise<Bank[]>;
    /**
     * Phương thức xây dựng, tạo thành url thanh toán của VNPay
     * @en Build the payment url
     *
     * @param {BuildPaymentUrl} data - Payload that contains the information to build the payment url
     * @returns {string} The payment url string
     * @see https://sandbox.vnpayment.vn/apis/docs/huong-dan-tich-hop/#t%E1%BA%A1o-url-thanh-to%C3%A1n
     */
    buildPaymentUrl(data: BuildPaymentUrl): string;
    /**
     * Phương thức xác thực tính đúng đắn của các tham số trả về từ VNPay
     * @en Method to verify the return url from VNPay
     *
     * @param {ReturnQueryFromVNPay} query - The object of data return from VNPay
     * @returns {VerifyReturnUrl} The return object
     * @see https://sandbox.vnpayment.vn/apis/docs/huong-dan-tich-hop/#code-returnurl
     */
    verifyReturnUrl(query: ReturnQueryFromVNPay): VerifyReturnUrl;
    /**
     * Phương thức xác thực tính đúng đắn của lời gọi ipn từ VNPay
     *
     * Sau khi nhận được lời gọi, hệ thống merchant cần xác thực dữ liệu nhận được từ VNPay, kiểm tra đơn hàng có hợp lệ không, kiểm tra số tiền thanh toán có đúng không.
     *
     * Sau đó phản hồi lại VNPay kết quả xác thực thông qua các `IpnResponse`
     *
     * @en Method to verify the ipn url from VNPay
     *
     * After receiving the call, the merchant system needs to verify the data received from VNPay, check if the order is valid, check if the payment amount is correct.
     *
     * Then respond to VNPay the verification result through the `IpnResponse`
     *
     * @param {ReturnQueryFromVNPay} query The object of data return from VNPay
     * @returns {VerifyIpnCall} The return object
     * @see https://sandbox.vnpayment.vn/apis/docs/huong-dan-tich-hop/#code-ipn-url
     */
    verifyIpnCall(query: ReturnQueryFromVNPay): VerifyIpnCall;
    /**
     * Đây là API để hệ thống merchant truy vấn kết quả thanh toán của giao dịch tại hệ thống VNPAY.
     * @en This is the API for the merchant system to query the payment result of the transaction at the VNPAY system.
     *
     * @param {QueryDr} query - The data to query
     * @returns {Promise<QueryDrResponseFromVNPay>} The data return from VNPay
     * @see https://sandbox.vnpayment.vn/apis/docs/truy-van-hoan-tien/querydr&refund.html#truy-van-ket-qua-thanh-toan-PAY
     */
    queryDr(query: QueryDr): Promise<QueryDrResponseFromVNPay>;
    refund(data: Refund): Promise<{
        vnp_Message: string;
        vnp_Amount: number;
        vnp_TxnRef: string;
        vnp_BankCode: string;
        vnp_PayDate: string | number;
        vnp_TransactionNo?: string | number | undefined;
        vnp_ResponseCode: number;
        vnp_TransactionStatus: string | number;
        vnp_SecureHash: string;
        vnp_TransactionType: import("./enums").VnpTransactionType;
        vnp_ResponseId: string;
        vnp_Command: string;
        vnp_TmnCode: string;
        vnp_OrderInfo: string;
    }>;
}
